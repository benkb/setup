#!/bin/sh

# Template for shell scripts
#
# Shell scripts that also can be used as modules/libraries for other scripts.
# When used as libraries this is how its done:
# - First: set the the MODULINO=1
#
#
#
# Usage: [Options] [filter] [filename] [extension]
#
# Options:
#   --help          show help
#   -w|--write      write to file (with a .sh extension)
#

set -u

prn() { printf "%s" "$@"; }
fail() { echo "Fail: $*" >&2; }
info() { echo "$@" >&2; }
die() {
	echo "$@" >&2
	exit 1
}
usage() { 
    perl -ne 'die "$1\n" if /^#\s+(Usage:.*)$/' "$0" >&2
    exit 1
} 
help(){
    perl -ne 'print "$1\n" if /^\s*#\s+(.*)/; exit if /^\s*[^#\s]+/;' "$0" >&2
    exit 1
}

secstamp() { date +'%Y%m%d%H%M%S'; }

absdir() {
	[ -n "${1:-}" ] || {
		fail "no dir"
		return 1
	}
	(cd "${1:-}" && pwd -P) || {
		fail "absdir failed"
		return 1
	}
}

template__bkblib_init() {
	: #bkblib__include 'libstd.sh'
}

template__get_cliphome(){

    local cliphome="$HOME/tmp/clipboard"
    [ -d "$cliphome" ] && mkdir -p "$cliphome"

    prn "$cliphome"
}


template__main() {

    local clipdir
    clipdir="$(template__get_cliphome)"

    if [ -t 0 ]; then
        while [ $# -gt 0 ]; do
            case "$1" in
            -h | --help) help ;;
            -w | --write) : ;;
            -*) usage ;;
            *) break ;;
            esac
            shift
        done
        local secfile=
        secfile="$(ls "$clipdir" | sort -r | head -1)"

        if [ -n "$secfile" ] ; then
            local secpath="$clipdir/$secfile"
            [ -f "$secpath" ] || die "sec file invalid '$secpath'"
            cat "$secpath"
        else
            exit 0
        fi
    else
        local secstamp
        secstamp="$(secstamp)"

        local clipfile="$clipdir/$secstamp"
        if [ -f "$clipfile" ] ; then
            sleep 2
            secstamp="$(secstamp)"
            clipfile="$clipdir/$secstamp"
        fi
        
        [ -f "$clipfile" ] && die  "Err: clipfile already exists '$clipfile'"

        while read -r line ; do
            echo "$line" >> $clipfile
        done
    fi
}

if [ -z "${BKB_SCRIPT_MAINDIR:-}" ]; then
	BKB_SCRIPT_MAINDIR="$(absdir "$(dirname "$0" 2>/dev/null)")"
	if [ -f "$BKB_SCRIPT_MAINDIR/bkblib.sh" ]; then
		. "$BKB_SCRIPT_MAINDIR/bkblib.sh" || die "Err: could not load mainlib under '$BKB_SCRIPT_MAINDIR'"
		template__bkblib_init || die "Err: could not init, imports failed or not a modulino"
	fi
	template__main "$@" || "Abort ..."
else
	template__bkblib_init || {
		fail "(template__init): could not init, imports failed or not a modulino"
		return 1
	}
fi
